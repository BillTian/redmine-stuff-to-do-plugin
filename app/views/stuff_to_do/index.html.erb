<h1><%= l(:stuff_to_do_title) %></h1>

<div class="splitcontentleft">
  <%= render :partial => 'left_panes' %>
</div>

<div class="splitcontentright">

  <h3><%= l(:stuff_to_do_what_is_available) %></h3>

  <div id="available-pane">
    <ol id="available">
      <% @available.each do |issue| %>
      <li class="issue" id="issue_<%= issue.id %>">
        <%= link_to('#' + issue.id.to_s, :controller => 'issues', :action => 'show', :id => issue) %>
        - <%= h(issue.project.name) %> -
        <%= link_to(h(issue.subject), :controller => 'issues', :action => 'show', :id => issue) %>
      </li>
      <% end %>
    </ol>
  </div>
</div>

<% content_for :header_tags do %>
  <%= stylesheet_link_tag "stuff_to_do.css", :plugin => "stuff_to_do_plugin", :media => 'all' %>
  <%= javascript_include_tag 'jquery-1.2.6.min.js', :plugin => 'stuff_to_do_plugin' %>
  <%= javascript_include_tag 'ui/ui.core.js', :plugin => 'stuff_to_do_plugin' %>
  <%= javascript_include_tag 'ui/ui.sortable.js', :plugin => 'stuff_to_do_plugin' %>
  <%= javascript_tag("jQuery.noConflict();") %>
  <%= javascript_include_tag 'stuff-to-do.js', :plugin => 'stuff_to_do_plugin' %>

<%# TODO: Move to js file after dev %>
<script type="text/javascript">
jQuery(document).ready(function(){
    attachSortables();
});

function attachSortables() {
    jQuery("#available").sortable({ 
        connectWith: ["#doing-now", "#recommended"], 
        dropOnEmpty: true,
        update : function (event, ui) {
            console.log('ava');
            if (allowRecommended()) {
                saveOrder();
            } else {
                jQuery("#available").sortable('cancel');            
            }
        }

    }); 
    jQuery("#doing-now").sortable({ 
        connectWith: ["#available", "#recommended"], 
        dropOnEmpty: true,
        update : function (event, ui) {
            console.log('doi');
            // Don't allow the available to update unless there are free slots.
            // But allow it to update from it's own sorting and alow what I'm doing now
            fromAvailable = (ui.sender != null && ui.sender.attr('id') == "available")
            if (allowRecommended() || !fromAvailable) {
                saveOrder();
            } else {
                jQuery("#available").sortable('cancel');
            }
        }
    });  

    jQuery("#recommended").sortable({ 
        connectWith: ["#available", "#doing-now"],
        dropOnEmpty: true,
        update : function (event, ui) {
            console.log('rec');
            // Don't allow the available to update unless there are free slots.
            // But allow it to update from it's own sorting and alow what I'm doing now
            fromAvailable = (ui.sender != null && ui.sender.attr('id') == "available")
            if (allowRecommended() || !fromAvailable) {
                saveOrder();
            } else {
                jQuery("#available").sortable('cancel');
            }
        }
    });  

}

function saveOrder() {
    data = jQuery("#doing-now").sortable('serialize') + '&' + jQuery("#recommended").sortable('serialize')
    jQuery.post('/stuff_to_do/reorder.js', data, function(response) {
        jQuery('.splitcontentleft').html(response);
        attachSortables();
    });

}

function allowRecommended() {
    // Is +1 because there is a placeholder inserted
    if (jQuery('#recommended li').length > 11) {
        return false;
    } else {
        return true;
    }
}

</script>
<% end %>
